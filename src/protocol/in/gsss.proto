syntax = "proto2";
package gsss;

enum RET {
  RET_ERROR = 0;
  RET_OK = 1;
  RET_SERVER_MAINTAIN = 2; //服务器维护
  RET_USER_NOT_EXIST = 3; //玩家不存在
  RET_LOGIN_REPEAT = 4; //重复登陆
  RET_USER_NAME_REPEAT = 5; //创建角色时,玩家名字重复
}

//ID不能与cs中ID重合
enum ID {
  ID_GS2SS_HeartBeat = 90000;
  ID_SS2GS_HeartBeat = 90001;
  ID_GS2SS_RegisterServer = 90002;
  ID_SS2GS_RegisterServer = 90003;
  ID_GS2SS_Login = 90004;
  ID_SS2GS_Login = 90005;
  ID_GS2SS_Create = 90006;
  ID_SS2GS_Create = 90007;
  ID_SS2GS_KickOut = 90008;
  ID_GS2SS_Offline = 90009;
  ID_GS2SS_CloseServer = 90010;

  ID_SS2GS_Broadcast = 90100;
}

message GS2SS_HeartBeat {
}

message SS2GS_HeartBeat {
}

message GS2SS_RegisterServer {
}

message SS2GS_RegisterServer {
  required uint64 sid = 1; //scene id
  repeated uint64 maped_sid = 2; //maped sid
}

message GS2SS_Login {
  required uint64 sid = 1; //scene id
  required string token = 2;
  required string channel_id = 3;
  required string device_id = 4;
  required string ip = 5;
  optional uint32 version = 6;
  required uint32 gate_ip = 7;
  required uint32 port = 8;
}

message SS2GS_Login {
  required uint32 ret = 1;
  optional uint64 uid = 2;
  optional uint32 sid = 3; //gateway client id
  optional string yzuid = 4;
  optional string platform_uid = 5;
  optional uint32 version = 6;
}

message GS2SS_Create {
  required string name = 1;
  required uint32 type = 2;
  required uint32 gate_ip = 3;
  required uint32 port = 4;
}

message SS2GS_Create {
  required uint32 ret = 1;
  optional uint64 uid = 2;
  optional uint32 sid = 3; //gateway client id
}

message SS2GS_KickOut {
}

message SS2GS_Broadcast {
   required uint32 msg_id = 1;
   required bytes msg_info = 2;
   repeated uint32 reciver = 3;
}

message GS2SS_Offline {
	required uint32 gate_ip = 1;
	required uint32 port = 2;
}

message GS2SS_CloseServer {
  required uint32 gate_ip = 1;
  required uint32 port = 2;
}

